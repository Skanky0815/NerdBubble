name: Server QA
run-name: QA for the Server

on:
  push:
    paths:
      - server/**

env:
  SERVER_DIR: ./server
  PHP_VERSION: '8.2'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check repository
        uses: actions/checkout@v2

      - name: Restore Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Save Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

  feature_tests:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check repository
        uses: actions/checkout@v2

      - name: Restore Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run feature tests
        run: vendor/bin/phpunit --configuration ./phpunit.xml --testsuite Feature --testdox
        working-directory: ${{ env.SERVER_DIR }}

  unit_tests:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: xdebug

      - name: Check repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run unit tests
        run: vendor/bin/phpunit --configuration ./phpunit.xml --testsuite Unit --testdox --coverage-clover=coverage.xml --log-junit=phpunit-log.xml
        working-directory: ${{ env.SERVER_DIR }}

      - name: Fix code coverage paths
        run: sed -i
          's@'$GITHUB_WORKSPACE'@/github/workspace/server@g' coverage.xml
        working-directory: ${{ env.SERVER_DIR }}

      - run: echo $GITHUB_WORKSPACE

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SERVER }}
        with:
          projectBaseDir: ${{ env.SERVER_DIR }}

  code_style_test:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check repository
        uses: actions/checkout@v2

      - name: Restore Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run code style tests
        run: vendor/bin/php-cs-fixer fix --diff --allow-risky=yes --dry-run
        working-directory: ${{ env.SERVER_DIR }}

  architecture_test:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Setup graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Check repository
        uses: actions/checkout@v2

      - name: Restore Composer cache
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run architecture tests
        run: vendor/bin/deptrac analyse --report-uncovered --formatter=graphviz-image
        working-directory: ${{ env.SERVER_DIR }}

      - name: check whats happen
        working-directory: ${{ env.SERVER_DIR }}
        run: ls -la
