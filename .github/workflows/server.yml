name: Server Pipe
run-name: Pipeline for the Server

on:
  push:
    paths:
      - server/**
      - .github/workflows/server.yml

env:
  SERVER_DIR: ./server
  PHP_VERSION: '8.2'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check repository
        uses: actions/checkout@main

      - name: Restore Composer cache
        uses: actions/cache@main
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Save Composer cache
        uses: actions/cache@main
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

  feature_tests:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check repository
        uses: actions/checkout@main

      - name: Restore Composer cache
        uses: actions/cache@main
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run feature tests
        run: vendor/bin/phpunit --configuration ./phpunit.xml --testsuite Feature --testdox
        working-directory: ${{ env.SERVER_DIR }}

  unit_tests:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: xdebug

      - name: Check repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Restore Composer cache
        uses: actions/cache@main
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run unit tests
        run: vendor/bin/phpunit --configuration ./phpunit.xml --testsuite Unit --testdox --coverage-clover=coverage.xml --log-junit=phpunit-log.xml
        working-directory: ${{ env.SERVER_DIR }}

      - name: Fix code coverage paths
        run: sed -i
          's@'$GITHUB_WORKSPACE'@/github/workspace@g' server/coverage.xml

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: php-code-coverage-report
          path: server/coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SERVER }}
        with:
          projectBaseDir: ${{ env.SERVER_DIR }}

  code_style_test:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Check repository
        uses: actions/checkout@main

      - name: Restore Composer cache
        uses: actions/cache@main
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run code style tests
        run: vendor/bin/php-cs-fixer fix --diff --allow-risky=yes --dry-run
        working-directory: ${{ env.SERVER_DIR }}

  architecture_test:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - name: Setup graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Check repository
        uses: actions/checkout@main

      - name: Restore Composer cache
        uses: actions/cache@main
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
        working-directory: ${{ env.SERVER_DIR }}

      - name: Run architecture tests
        run: vendor/bin/deptrac analyse --report-uncovered --formatter=graphviz-image --output=architecture.png
        working-directory: ${{ env.SERVER_DIR }}

      - name: Archive architecture diagram
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: php-architecture-diagram
          path: server/architecture.png

  deploy:
    runs-on: ubuntu-latest
    needs: [unit_tests, code_style_test, architecture_test, feature_tests]
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}

      - uses: actions/checkout@main
      - name: Install dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-dev
        working-directory: ${{ env.SERVER_DIR }}

      - name: Prepare Laravel Application
        run: |
          cp .env.prod .env
          echo DB_DATABASE=${{secrets.DB_DATABASE}} >> .env
          echo DB_USERNAME=${{secrets.DB_USERNAME}} >> .env
          echo DB_PASSWORD=${{secrets.DB_PASSWORD}} >> .env
          php artisan key:generate
        working-directory: ${{ env.SERVER_DIR }}

      - name: Stop Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 31.220.126.208
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          script: |
            cd ./html/server
            echo "++++++++++++++++++++++++"
            echo "+++++ Stop Server +++++"
            echo "++++++++++++++++++++++++"
            php artisan down

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          local-dir: ./server/
          server-dir: html/server/
          server: 31.220.126.208
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          exclude: |
            **/.git*
            **/.git*/**
            **/test/**
            **/.php-cs-fixer.dist.php
            **/deptrac.yml
            **/phpunit.xml
            **/README.md
            **/sonar-project.properties
            **/vite.config.js
            **/.env.ci
            **/.env.example

      - name: Run Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 31.220.126.208
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          script: |
            cd ./html/server
            echo "++++++++++++++++++++++++++++++++"
            echo "+++++ Optimize Application +++++"
            echo "++++++++++++++++++++++++++++++++"
            php artisan optimize
            echo "++++++++++++++++++++++++"
            echo "+++++ Warmup Cache +++++"
            echo "++++++++++++++++++++++++"
            php artisan config:cache
            echo "++++++++++++++++++++++"
            echo "+++++ Migrate DB +++++"
            echo "++++++++++++++++++++++"
            php artisan migrate --force
            echo "++++++++++++++++++++++++"
            echo "+++++ Start Server +++++"
            echo "++++++++++++++++++++++++"
            php artisan up
